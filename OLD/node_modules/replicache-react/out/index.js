"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useSubscribe = void 0;
const react_1 = require("react");
const react_dom_1 = require("react-dom");
// We wrap all the callbacks in a `unstable_batchedUpdates` call to ensure that
// we do not render things more than once over all of the changed subscriptions.
let hasPendingCallback = false;
let callbacks = [];
function doCallback() {
    const cbs = callbacks;
    callbacks = [];
    hasPendingCallback = false;
    (0, react_dom_1.unstable_batchedUpdates)(() => {
        for (const callback of cbs) {
            callback();
        }
    });
}
function useSubscribe(rep, query, def, deps = []) {
    const [snapshot, setSnapshot] = (0, react_1.useState)(def);
    (0, react_1.useEffect)(() => {
        if (!rep) {
            return;
        }
        return rep.subscribe(query, {
            onData: (data) => {
                callbacks.push(() => setSnapshot(data));
                if (!hasPendingCallback) {
                    void Promise.resolve().then(doCallback);
                    hasPendingCallback = true;
                }
            },
        });
    }, [rep, ...deps]);
    return snapshot;
}
exports.useSubscribe = useSubscribe;
